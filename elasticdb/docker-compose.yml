version: '3'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      # - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.security.enabled=$ELASTIC_SECURITY
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    mem_limit: 512m 
    cpus: 0.7
    ports:
      - ${ELASTIC_PORT}:9200
    networks: 
      - stack

  kibana:
    # image: docker.elastic.co/kibana/kibana:$ELASTIC_VERSION
    build:
      context: . # Build context is the "kibana" directory
      dockerfile: Dockerfile
      args:
        - ELASTIC_VERSION=${ELASTIC_VERSION}
    # command: ["sh", "-c", "/usr/share/kibana/init.sh"]
    volumes:
      - kibana-data:/usr/share/kibana/data
    # volumes:
    #   - ./kibana/init.sh:/usr/share/kibana/init.sh:z  # Mount the script as a volume
    environment:
      # - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - ELASTIC_PORT=${ELASTIC_PORT}
      # - ELASTIC_VERSION=$ELASTIC_VERSION
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN=${ELASTIC_TOKEN}
      - ELASTICSEARCH_URL=http://elasticsearch:${ELASTIC_PORT}
      # - ELASTICSEARCH_HOSTS=http://elasticsearch:${ELASTIC_PORT}
    ports: 
      - ${KIBANA_PORT}:5601
    networks: 
      - stack
    links: 
      - elasticsearch
    depends_on: 
      - elasticsearch

volumes:
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local

networks:
  stack: {}